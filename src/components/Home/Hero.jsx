'use client'
import Image from 'next/image'
import IMG_circle from '@/assets/shape/circle.png'
import { useTranslations } from 'next-intl'
import IsLogin from '@/utils/IsLogin'
import Alert from '@/atoms/Alert'
import { useEffect } from 'react'

const Hero = () => {
  
  const t =useTranslations('home')
  const [handleRoute , show , setShow ]  = IsLogin()


  const lis = [
    { path:"/evaluate/people"    , title:t.raw('btns')[2]        , icon : <svg width="49" height="40" viewBox="0 0 49 40" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M41.4688 21.1393H36.7702C36.1307 21.1393 35.5116 21.2266 34.9224 21.3873C33.7601 19.1024 31.3871 17.5325 28.6527 17.5325H20.3473C17.6129 17.5325 15.2399 19.1024 14.0776 21.3873C13.4755 21.2227 12.854 21.1393 12.2298 21.1393H7.53125C3.65422 21.1393 0.5 24.2935 0.5 28.1705V35.6816C0.5 38.0078 2.39253 39.9003 4.71875 39.9003H44.2812C46.6075 39.9003 48.5 38.0078 48.5 35.6816V28.1705C48.5 24.2935 45.3458 21.1393 41.4688 21.1393ZM13.3161 24.5639V37.0879H4.71875C3.94334 37.0879 3.3125 36.4571 3.3125 35.6817V28.1706C3.3125 25.8444 5.20503 23.9518 7.53125 23.9518H12.2298C12.6116 23.9518 12.9812 24.0037 13.3332 24.0992C13.3224 24.2539 13.3167 24.4089 13.3161 24.5639ZM32.8714 37.0879H16.1286V24.5638C16.1286 22.2376 18.0211 20.3451 20.3473 20.3451H28.6527C30.9789 20.3451 32.8714 22.2376 32.8714 24.5638V37.0879ZM45.6875 35.6817C45.6875 36.4571 45.0567 37.0879 44.2812 37.0879H35.6839V24.5638C35.6833 24.4088 35.6776 24.2538 35.6668 24.0991C36.0265 24.0014 36.3975 23.9518 36.7702 23.9518H41.4688C43.795 23.9518 45.6875 25.8443 45.6875 28.1705V35.6817Z" fill="#3E64F4"/><path d="M9.88088 7.85975C6.43566 7.85975 3.63281 10.6626 3.63281 14.1078C3.63272 17.553 6.43566 20.3559 9.88088 20.3559C13.326 20.3559 16.1289 17.553 16.1289 14.1078C16.1289 10.6626 13.3261 7.85975 9.88088 7.85975ZM9.88078 17.5434C7.98637 17.5434 6.44522 16.0022 6.44522 14.1078C6.44522 12.2134 7.98637 10.6723 9.88078 10.6723C11.7752 10.6723 13.3163 12.2134 13.3163 14.1078C13.3163 16.0022 11.7752 17.5434 9.88078 17.5434ZM24.5003 0.0995941C19.8975 0.0995941 16.1529 3.84416 16.1529 8.44691C16.1529 13.0497 19.8975 16.7942 24.5003 16.7942C29.103 16.7942 32.8476 13.0497 32.8476 8.44691C32.8476 3.84425 29.103 0.0995941 24.5003 0.0995941ZM24.5003 13.9817C21.4483 13.9817 18.9654 11.4988 18.9654 8.44691C18.9654 5.39506 21.4483 2.91209 24.5003 2.91209C27.5522 2.91209 30.0351 5.39497 30.0351 8.44691C30.0351 11.4988 27.5522 13.9817 24.5003 13.9817ZM39.1196 7.85975C35.6745 7.85975 32.8716 10.6626 32.8716 14.1078C32.8717 17.553 35.6745 20.3559 39.1196 20.3559C42.5648 20.3559 45.3677 17.553 45.3677 14.1078C45.3677 10.6626 42.5648 7.85975 39.1196 7.85975ZM39.1196 17.5434C37.2253 17.5434 35.6841 16.0022 35.6841 14.1078C35.6842 12.2134 37.2253 10.6723 39.1196 10.6723C41.014 10.6723 42.5552 12.2134 42.5552 14.1078C42.5552 16.0022 41.014 17.5434 39.1196 17.5434Z" fill="#3E64F4"/></svg> },
    { path:"/evaluate/banks"     , title: t.raw('btns')[1]       , icon :  <svg width="49" height="48" viewBox="0 0 49 48" fill="none" xmlns="http://www.w3.org/2000/svg">      <path d="M47.4092 19.6364C48.0122 19.6364 48.5001 19.1514 48.5001 18.5485V14.1853C48.5001 13.8008 48.2977 13.4439 47.9663 13.2479L26.6264 0.574853C26.6168 0.56841 26.6072 0.563092 26.5977 0.557774C25.2713 -0.177261 23.7756 -0.199556 22.3725 0.572705L1.03376 13.2479C0.871034 13.3443 0.736233 13.4815 0.642639 13.6459C0.549044 13.8102 0.499884 13.9962 0.5 14.1853V18.5485C0.5 19.1514 0.987944 19.6364 1.59094 19.6364H4.86367V39.2736C2.45699 39.2736 0.5 41.2304 0.5 43.6368V46.9092C0.49992 47.0525 0.528083 47.1944 0.582881 47.3268C0.637679 47.4592 0.718036 47.5795 0.819357 47.6808C0.920678 47.7821 1.04098 47.8624 1.17337 47.9172C1.30577 47.972 1.44766 48.0002 1.59094 48.0001H47.4092C47.5524 48.0002 47.6943 47.972 47.8267 47.9172C47.9591 47.8624 48.0794 47.7821 48.1807 47.6808C48.2821 47.5795 48.3624 47.4592 48.4172 47.3268C48.472 47.1944 48.5002 47.0525 48.5001 46.9092V43.6368C48.5001 41.2304 46.5431 39.2736 44.1364 39.2736V19.6364H47.4092ZM46.3182 43.6364V45.8182H2.68179V43.6364C2.68179 42.4337 3.66084 41.4546 4.86357 41.4546H44.1364C45.3392 41.4545 46.3182 42.4336 46.3182 43.6364ZM7.04546 39.2727V19.6364H11.4091V39.2727H7.04546ZM13.5909 39.2727V19.6364H20.1364V39.2727H13.5909ZM22.3182 39.2727V19.6364H26.6818V39.2727H22.3182ZM28.8636 39.2727V19.6364H35.4091V39.2727H28.8636ZM37.591 39.2727V19.6364H41.9546V39.2727H37.591ZM2.68179 17.4546V14.8029L23.4549 2.46199C24.1346 2.08808 24.8569 2.0891 25.5281 2.45452L46.3182 14.8029V17.4546H2.68179Z" fill="#3E64F4"/>      </svg>       },
    { path:"/evaluate/companies" , title: t.raw('btns')[0]       , icon : <svg width="45" height="43" viewBox="0 0 45 43" fill="none" xmlns="http://www.w3.org/2000/svg">     <path d="M42.9004 40H38.1004V6.4C38.1004 6.08174 37.974 5.77652 37.7489 5.55147C37.5239 5.32643 37.2186 5.2 36.9004 5.2H33.3004V1.6C33.3004 1.28174 33.174 0.976517 32.9489 0.751473C32.7239 0.52643 32.4186 0.400002 32.1004 0.400002H12.9004C12.5821 0.400002 12.2769 0.52643 12.0519 0.751473C11.8268 0.976517 11.7004 1.28174 11.7004 1.6V5.2H8.10039C7.78213 5.2 7.47691 5.32643 7.25186 5.55147C7.02682 5.77652 6.90039 6.08174 6.90039 6.4V40H2.10039C1.78213 40 1.47691 40.1264 1.25186 40.3515C1.02682 40.5765 0.900391 40.8817 0.900391 41.2C0.900391 41.5183 1.02682 41.8235 1.25186 42.0485C1.47691 42.2736 1.78213 42.4 2.10039 42.4H42.9004C43.2186 42.4 43.5239 42.2736 43.7489 42.0485C43.974 41.8235 44.1004 41.5183 44.1004 41.2C44.1004 40.8817 43.974 40.5765 43.7489 40.3515C43.5239 40.1264 43.2186 40 42.9004 40ZM14.1004 2.8H30.9004V5.2H14.1004V2.8ZM16.5004 40V32.8H21.3004V40H16.5004ZM23.7004 40V32.8H28.5004V40H23.7004ZM30.9004 40V31.6C30.9004 31.2817 30.774 30.9765 30.5489 30.7515C30.3239 30.5264 30.0186 30.4 29.7004 30.4H15.3004C14.9821 30.4 14.6769 30.5264 14.4519 30.7515C14.2268 30.9765 14.1004 31.2817 14.1004 31.6V40H9.30039V7.6H35.7004V40H30.9004ZM33.3004 12.4C33.3004 12.7183 33.174 13.0235 32.9489 13.2485C32.7239 13.4736 32.4186 13.6 32.1004 13.6H27.3004C26.9821 13.6 26.6769 13.4736 26.4519 13.2485C26.2268 13.0235 26.1004 12.7183 26.1004 12.4C26.1004 12.0817 26.2268 11.7765 26.4519 11.5515C26.6769 11.3264 26.9821 11.2 27.3004 11.2H32.1004C32.4186 11.2 32.7239 11.3264 32.9489 11.5515C33.174 11.7765 33.3004 12.0817 33.3004 12.4ZM18.9004 12.4C18.9004 12.7183 18.774 13.0235 18.5489 13.2485C18.3239 13.4736 18.0186 13.6 17.7004 13.6H12.9004C12.5821 13.6 12.2769 13.4736 12.0519 13.2485C11.8268 13.0235 11.7004 12.7183 11.7004 12.4C11.7004 12.0817 11.8268 11.7765 12.0519 11.5515C12.2769 11.3264 12.5821 11.2 12.9004 11.2H17.7004C18.0186 11.2 18.3239 11.3264 18.5489 11.5515C18.774 11.7765 18.9004 12.0817 18.9004 12.4ZM33.3004 18.4C33.3004 18.7183 33.174 19.0235 32.9489 19.2485C32.7239 19.4736 32.4186 19.6 32.1004 19.6H27.3004C26.9821 19.6 26.6769 19.4736 26.4519 19.2485C26.2268 19.0235 26.1004 18.7183 26.1004 18.4C26.1004 18.0817 26.2268 17.7765 26.4519 17.5515C26.6769 17.3264 26.9821 17.2 27.3004 17.2H32.1004C32.4186 17.2 32.7239 17.3264 32.9489 17.5515C33.174 17.7765 33.3004 18.0817 33.3004 18.4ZM18.9004 18.4C18.9004 18.7183 18.774 19.0235 18.5489 19.2485C18.3239 19.4736 18.0186 19.6 17.7004 19.6H12.9004C12.5821 19.6 12.2769 19.4736 12.0519 19.2485C11.8268 19.0235 11.7004 18.7183 11.7004 18.4C11.7004 18.0817 11.8268 17.7765 12.0519 17.5515C12.2769 17.3264 12.5821 17.2 12.9004 17.2H17.7004C18.0186 17.2 18.3239 17.3264 18.5489 17.5515C18.774 17.7765 18.9004 18.0817 18.9004 18.4ZM33.3004 24.4C33.3004 24.7183 33.174 25.0235 32.9489 25.2485C32.7239 25.4736 32.4186 25.6 32.1004 25.6H27.3004C26.9821 25.6 26.6769 25.4736 26.4519 25.2485C26.2268 25.0235 26.1004 24.7183 26.1004 24.4C26.1004 24.0817 26.2268 23.7765 26.4519 23.5515C26.6769 23.3264 26.9821 23.2 27.3004 23.2H32.1004C32.4186 23.2 32.7239 23.3264 32.9489 23.5515C33.174 23.7765 33.3004 24.0817 33.3004 24.4ZM18.9004 24.4C18.9004 24.7183 18.774 25.0235 18.5489 25.2485C18.3239 25.4736 18.0186 25.6 17.7004 25.6H12.9004C12.5821 25.6 12.2769 25.4736 12.0519 25.2485C11.8268 25.0235 11.7004 24.7183 11.7004 24.4C11.7004 24.0817 11.8268 23.7765 12.0519 23.5515C12.2769 23.3264 12.5821 23.2 12.9004 23.2H17.7004C18.0186 23.2 18.3239 23.3264 18.5489 23.5515C18.774 23.7765 18.9004 24.0817 18.9004 24.4Z" fill="#3E64F4"/>     </svg>      },
  ]


  useEffect(_=> {
    let currentIndex = 0;
    const texts = document.querySelectorAll('.text-block');
    const totalTexts = texts.length;
  
    setInterval(function() {
      texts[currentIndex].classList.remove('active');
      currentIndex = (currentIndex + 1) % totalTexts;
      texts[currentIndex].classList.add('active');
    }, 4000);

  } ,[])

  useEffect(_=> {
    let currentIndex = 0;
    const texts = document.querySelectorAll('.img-block');
    const totalTexts = texts.length;
  
    setInterval(function() {
      texts[currentIndex]?.classList.remove('active');
      currentIndex = (currentIndex + 1) % totalTexts;
      texts[currentIndex]?.classList.add('active');
    }, 4000);

  } ,[])

  return (
    <section className='hero'>
      {!show ? <Alert setShow={setShow} show={show} /> : "" }
        <Image className='shape' src={IMG_circle} width={200} height={200}  alt='circle' />
        <div className="container ">
            <div className="box">
              {/* <Slider2 data={t.raw('text')} /> */}

              <div className='all-text'>
                  {t.raw('text').map((e,i)=>(
                    <div className={`text text${i} ${i==0 ? "active" : ""} text-block rtl:text-right ltr:text-left ltr:max-lg:text-center rtl:max-lg:text-center `} key={i} >
                      <h2 className='leading-[50px] max-md:leading-[30px] ' > {e.h1} </h2>
                      <h3> {e.h2} </h3>
                    </div>
                  ))}
              </div>


              <ul className='boxes'>
                {lis.map((e,i)=> ( 
                  <button  onClick={_=> handleRoute(e.path)} className='grad box-icon' key={i}> 
                    <div className="svg"> {e.icon} </div>
                    <span  > {e.title} </span>
                  </button>
                ))}
              </ul>

            </div>


            <div className="image-container "> {
                t.raw('imgs').map((e,i)=>(
                  <Image key={i} className={`img-block  ${i == 0 ? "active" :""} `}  alt='' src={e}  />
                ))
          } </div>
            

        </div>
    </section>

  )
}

export async function getStaticProps(e){
  const {locale} = e ;
  return {
    props:{
      ...Hero(await serverSideTranslations )
    }
  }
}

export default Hero